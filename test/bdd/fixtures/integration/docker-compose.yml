#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

services:

  mock-wallet.com:
    container_name: mock-wallet.com
    image: ${ARIES_AGENT_REST_IMAGE}:${ARIES_AGENT_REST_IMAGE_TAG}
    environment:
      - ARIESD_API_HOST=${WALLET_AGENT_HOST}:${WALLET_AGENT_API_PORT}
      - ARIESD_INBOUND_HOST=http@${WALLET_AGENT_HOST}:${WALLET_AGENT_INBOUND_PORT}
      - ARIESD_INBOUND_HOST_EXTERNAL=http@http://mock-wallet.com:${WALLET_AGENT_INBOUND_PORT}
      - ARIESD_DATABASE_TYPE=mysql
      - ARIESD_DATABASE_URL=aries:aries-secret-pw@tcp(mysql:3306)/
      - ARIESD_DATABASE_PREFIX=aries_wallet
      - ARIESD_DEFAULT_LABEL=aries-wallet
      - ARIESD_HTTP_RESOLVER=trustbloc@http://did.rest.example.com:8072/1.0/identifiers
      - ARIESD_WEBHOOK_URL=http://webhook.mock-wallet.com:${WALLET_WEBHOOK_PORT}
    ports:
      - ${WALLET_AGENT_INBOUND_PORT}:${WALLET_AGENT_INBOUND_PORT}
      - ${WALLET_AGENT_API_PORT}:${WALLET_AGENT_API_PORT}
    command: start
    networks:
      adapter-rest_bdd_net:
        aliases:
          - mock-wallet.com

  webhook.mock-wallet.com:
    container_name: webhook.mock-wallet.com
    image: ${MOCK_WEBHOOK_IMAGE}:${MOCK_WEBHOOK_IMAGE_TAG}
    environment:
      - WEBHOOK_PORT=${WALLET_WEBHOOK_PORT}
    ports:
      - ${WALLET_WEBHOOK_PORT}:${WALLET_WEBHOOK_PORT}
    networks:
      adapter-rest_bdd_net:
        aliases:
          - webhook.mock-wallet.com

  mock-issuer-adapter.com:
    container_name: mock-issuer-adapter.com
    image: ${ARIES_AGENT_REST_IMAGE}:${ARIES_AGENT_REST_IMAGE_TAG}
    environment:
      - ARIESD_API_HOST=${ISSUER_AGENT_HOST}:${ISSUER_AGENT_API_PORT}
      - ARIESD_INBOUND_HOST=http@${ISSUER_AGENT_HOST}:${ISSUER_AGENT_INBOUND_PORT}
      - ARIESD_INBOUND_HOST_EXTERNAL=http@http://mock-issuer-adapter.com:${ISSUER_AGENT_INBOUND_PORT}
      - ARIESD_DATABASE_TYPE=mysql
      - ARIESD_DATABASE_URL=aries:aries-secret-pw@tcp(mysql:3306)/
      - ARIESD_DATABASE_PREFIX=issuer_adapter_mock
      - ARIESD_DEFAULT_LABEL=issuer-adapter
      - ARIESD_AUTO_ACCEPT=true
    ports:
      - ${ISSUER_AGENT_INBOUND_PORT}:${ISSUER_AGENT_INBOUND_PORT}
      - ${ISSUER_AGENT_API_PORT}:${ISSUER_AGENT_API_PORT}
    command: start
    networks:
      adapter-rest_bdd_net:
        aliases:
          - mock-issuer-adapter.com

  mock-issuer.com:
    container_name: mock-issuer.com
    image: docker.pkg.github.com/trustbloc/edge-adapter/mock-issuer:latest
    environment:
      - ISSUER_PORT=${ISSUER_PORT}
    ports:
      - ${ISSUER_PORT}:${ISSUER_PORT}
    networks:
      adapter-rest_bdd_net:
        aliases:
          - mock-issuer.com

  governance.vcs.example.com:
    container_name: governance.vcs.example.com
    image: ${VCS_IMAGE}:${VCS_IMAGE_TAG}
    environment:
      - VC_REST_HOST_URL=0.0.0.0:8066
      - VC_REST_HOST_URL_EXTERNAL=http://governance.vcs.example.com:8066
      - EDV_REST_HOST_URL=${EDV_HOST}:${EDV_PORT}${EDV_ROOT_ENDPOINT}
      - UNIVERSAL_RESOLVER_HOST_URL=http://did.rest.example.com:8072/1.0/identifiers
      - BLOC_DOMAIN=${BLOC_DOMAIN}
      - VC_REST_MODE=governance
      - DATABASE_TYPE=mem
      - KMSSECRETS_DATABASE_TYPE=mem
      - VC_REST_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - VC_REST_TLS_SYSTEMCERTPOOL=true
      - VC_REST_GOVERNANCE_CLAIMS_FILE=/etc/governance_claims.json
    ports:
      - 8066:8066
    entrypoint: ""
    command:  /bin/sh -c "/tmp/governance-vcs-profiles.sh& vc-rest start"
    volumes:
      - ./governance-vcs-profiles.sh/:/tmp/governance-vcs-profiles.sh
      - ../keys/tls:/etc/tls
      - ./governance_claims.json:/etc/governance_claims.json
    depends_on:
      - edv.rest.example.com
    networks:
      adapter-rest_bdd_net:
        aliases:
          - governance.vcs.example.com

  edv.rest.example.com:
    container_name: edv.rest.example.com
    image: ${EDV_REST_IMAGE}:${EDV_REST_IMAGE_TAG}
    environment:
      - EDV_HOST_URL=0.0.0.0:${EDV_PORT}
      - EDV_DATABASE_TYPE=mem
    ports:
      - ${EDV_PORT}:${EDV_PORT}
    command: start
    networks:
      adapter-rest_bdd_net:
        aliases:
          - edv.rest.example.com

networks:
  adapter-rest_bdd_net:
    external: true
