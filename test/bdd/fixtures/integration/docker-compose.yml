#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

services:

  hub-router.com:
    container_name: hub-router.com
    image: ${HUB_ROUTER_IMAGE}:${HUB_ROUTER_IMAGE_TAG}
    environment:
      - HUB_ROUTER_HOST_URL=0.0.0.0:${HUB_ROUTER_PORT}
      - HUB_ROUTER_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - HUB_ROUTER_TLS_SYSTEMCERTPOOL=true      
      - HUB_ROUTER_DIDCOMM_HTTP_HOST=0.0.0.0:${HUB_ROUTER_DIDCOMM_HTTP_PORT}
      - HUB_ROUTER_DIDCOMM_HTTP_HOST_EXTERNAL=http://hub-router.com:${HUB_ROUTER_DIDCOMM_HTTP_PORT}
      - HUB_ROUTER_DIDCOMM_WS_HOST=0.0.0.0:${HUB_ROUTER_DIDCOMM_WS_PORT}
      - HUB_ROUTER_DIDCOMM_WS_HOST_EXTERNAL=ws://hub-router.com:${HUB_ROUTER_DIDCOMM_WS_PORT}
      - HUB_ROUTER_DSN_PERSISTENT=mem://test
      - HUB_ROUTER_DSN_TRANSIENT=mem://test
      - HUB_ROUTER_DSN_TIMEOUT=45
      - HUB_ROUTER_LOGLEVEL=INFO
      - HUB_ROUTER_DIDCOMM_V2=${USE_DIDCOMM_V2}
      - HUB_ROUTER_ORB_DOMAINS=testnet.orb.local
      - HUB_ROUTER_KEY_TYPE=${AGENT_KEY_TYPE}
      - HUB_ROUTER_KEY_AGREEMENT_TYPE=${AGENT_KEY_AGREEMENT_TYPE}
      - HUB_ROUTER_HTTP_RESOLVER=orb@https://testnet.orb.local/sidetree/v1/identifiers
    ports:
      - ${HUB_ROUTER_PORT}:${HUB_ROUTER_PORT}
      - ${HUB_ROUTER_DIDCOMM_HTTP_PORT}:${HUB_ROUTER_DIDCOMM_HTTP_PORT}
      - ${HUB_ROUTER_DIDCOMM_WS_PORT}:${HUB_ROUTER_DIDCOMM_WS_PORT}
    entrypoint: ""
    command: /bin/sh -c "hub-router start"
    volumes:
      - ../keys/tls:/etc/tls
    networks:
      adapter-rest_bdd_net:
        aliases:
          - hub-router.com

  mock-wallet.com:
    container_name: mock-wallet.com
    image: ${AGENT_SDK_REST_IMAGE}:${AGENT_SDK_REST_IMAGE_TAG}
    environment:
      - ARIESD_API_HOST=${WALLET_AGENT_HOST}:${WALLET_AGENT_API_PORT}
      - ARIESD_INBOUND_HOST=http@${WALLET_AGENT_HOST}:${WALLET_AGENT_INBOUND_PORT}
      - ARIESD_INBOUND_HOST_EXTERNAL=http@http://mock-wallet.com:${WALLET_AGENT_INBOUND_PORT}
      - ARIESD_DATABASE_TYPE=leveldb
      - ARIESD_DATABASE_PREFIX=aries_wallet
      - ARIESD_DEFAULT_LABEL=aries-wallet
      - ARIESD_HTTP_RESOLVER=orb@http://did.rest.example.com:8072/1.0/identifiers
      - ARIESD_WEBHOOK_URL=http://webhook.mock-wallet.com:${WALLET_WEBHOOK_PORT}
      - ARIESD_OUTBOUND_TRANSPORT=http,ws
      - ARIESD_TRANSPORT_RETURN_ROUTE=all
      - ARIESD_LOG_LEVEL=debug
      - ARIESD_CONTEXT_PROVIDER_URL=${CONTEXT_PROVIDER_URL}
      - ARIESD_KEY_TYPE=${AGENT_KEY_TYPE}
      - ARIESD_KEY_AGREEMENT_TYPE=${AGENT_KEY_AGREEMENT_TYPE}
      - ARIESD_MEDIA_TYPE_PROFILES=${AGENT_MEDIA_TYPE_PROFILES}
    ports:
      - ${WALLET_AGENT_INBOUND_PORT}:${WALLET_AGENT_INBOUND_PORT}
      - ${WALLET_AGENT_API_PORT}:${WALLET_AGENT_API_PORT}
    entrypoint: ""
    command:  /bin/sh -c "cp /etc/tls/* /usr/local/share/ca-certificates/;update-ca-certificates; agent-rest start"
    volumes:
      - ../keys/tls:/etc/tls
    networks:
      adapter-rest_bdd_net:
        aliases:
          - mock-wallet.com

  webhook.mock-wallet.com:
    container_name: webhook.mock-wallet.com
    image: ${MOCK_WEBHOOK_IMAGE}:${MOCK_WEBHOOK_IMAGE_TAG}
    environment:
      - WEBHOOK_PORT=${WALLET_WEBHOOK_PORT}
    ports:
      - ${WALLET_WEBHOOK_PORT}:${WALLET_WEBHOOK_PORT}
    networks:
      adapter-rest_bdd_net:
        aliases:
          - webhook.mock-wallet.com

  mock-issuer-adapter.com:
    container_name: mock-issuer-adapter.com
    image: ${AGENT_SDK_REST_IMAGE}:${AGENT_SDK_REST_IMAGE_TAG}
    environment:
      - ARIESD_API_HOST=${ISSUER_AGENT_HOST}:${ISSUER_AGENT_API_PORT}
      - ARIESD_INBOUND_HOST=http@${ISSUER_AGENT_HOST}:${ISSUER_AGENT_INBOUND_PORT}
      - ARIESD_INBOUND_HOST_EXTERNAL=http@http://mock-issuer-adapter.com:${ISSUER_AGENT_INBOUND_PORT}
      - ARIESD_DATABASE_TYPE=leveldb
      - ARIESD_DATABASE_PREFIX=issuer_adapter_mock
      - ARIESD_DEFAULT_LABEL=issuer-adapter
      - ARIESD_AUTO_ACCEPT=true
      - ARIESD_CONTEXT_PROVIDER_URL=${CONTEXT_PROVIDER_URL}
      - ARIESD_KEY_TYPE=${AGENT_KEY_TYPE}
      - ARIESD_KEY_AGREEMENT_TYPE=${AGENT_KEY_AGREEMENT_TYPE}
      - ARIESD_MEDIA_TYPE_PROFILES=${AGENT_MEDIA_TYPE_PROFILES}
    ports:
      - ${ISSUER_AGENT_INBOUND_PORT}:${ISSUER_AGENT_INBOUND_PORT}
      - ${ISSUER_AGENT_API_PORT}:${ISSUER_AGENT_API_PORT}
    entrypoint: ""
    command:  /bin/sh -c "cp /etc/tls/* /usr/local/share/ca-certificates/;update-ca-certificates; agent-rest start"
    volumes:
      - ../keys/tls:/etc/tls
    networks:
      adapter-rest_bdd_net:
        aliases:
          - mock-issuer-adapter.com

  mock-issuer.com:
    container_name: mock-issuer.com
    image: ghcr.io/trustbloc/edge-adapter/mock-issuer:latest
    environment:
      - ISSUER_PORT=${ISSUER_PORT}
    ports:
      - ${ISSUER_PORT}:${ISSUER_PORT}
    networks:
      adapter-rest_bdd_net:
        aliases:
          - mock-issuer.com

  edv.rest.example.com:
    container_name: edv.rest.example.com
    image: ${EDV_REST_IMAGE}:${EDV_REST_IMAGE_TAG}
    environment:
      - EDV_HOST_URL=0.0.0.0:${EDV_PORT}
      - EDV_DATABASE_TYPE=mem
    ports:
      - ${EDV_PORT}:${EDV_PORT}
    command: start
    networks:
      adapter-rest_bdd_net:
        aliases:
          - edv.rest.example.com

networks:
  adapter-rest_bdd_net:
    external: true
